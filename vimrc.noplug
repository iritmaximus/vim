" Vimrc setup


nnoremap <SPACE> <Nop>        " make sure space is not mapped to something else
let mapleader = "\<SPACE>"    " leader key mapped to space

set nocompatible              " needs to be on for reasons
syntax on                     " syntax highlighting
filetype plugin on            " idunno plugins work

set timeoutlen=1000 ttimeoutlen=10  " disables esc wait time
set updatetime=300                  " sets how often vim updates ex. plugins
" set fileformat=unix           " breaks vimtex?
set encoding=UTF-8            " propably dont have to do this but ok

if has("nvim")
set clipboard+=unnamedplus  " uses system clipboard
else
set clipboard=unnamedplus   " not sure if this has to be different, dont bother to test
endif

set undodir=~/.vim/undodir
set undofile
set noswapfile                  " disables swap files

" different tab lengths for different filetypes
au BufNewFile,BufRead *.py
  \ set tabstop=4 |
  \ set softtabstop=4 |
  \ set shiftwidth=4 |

au BufNewFile,BufRead *.ts
  \ set tabstop=2 |
  \ set softtabstop=2 |
  \ set shiftwidth=2 |

au BufNewFile,BufRead *.k91
  \ set tabstop=4 |
  \ set softtabstop=4 |
  \ set shiftwidth=4 |


set tabstop=2             " tablength?
set softtabstop=2         " not completely sure xd
set shiftwidth=2          " also not sure
set autoindent            " automatically indents, duh...
set smartindent           " knows how to live with if and such (?)
set smarttab              " lol
set expandtab             " no idea

set nowrap                " no linewrapping if lines go over the border
set textwidth=0           " disables line hard wrapping
set list                  " absolutely no clue

" hidden characters
set listchars=eol:.,tab:>-,trail:~,extends:>,precedes:<

set cursorline          " horisontal line where the cursor is
" set cursorcolumn        " vertical cursorline

set number                " set line numbers
set relativenumber        " set relative line numbers
set scrolloff=8           " screen rolls x amount of lines before
set signcolumn=auto       " shows the column on the left if there is something to show

set showcmd               " lol not this one either
" set noshowmode            " shows which mode you are in
set conceallevel=0        " does not 'conceal' for ex. quotations in json
set noerrorbells visualbell t_vb= " disables noises
set concealcursor=""

set ignorecase            " search is not case sensitive if all lower
set smartcase             " if you include upper, then it is case sensitive
set incsearch             " suggest autocomplete's smartly???
set hlsearch              " highlights everything searched


" Reference chart of values:
"   Ps = 0  -> blinking block.
"   Ps = 1  -> blinking block (default).
"   Ps = 2  -> steady block.
"   Ps = 3  -> blinking underline.
"   Ps = 4  -> steady underline.
"   Ps = 5  -> blinking bar (xterm).
"   Ps = 6  -> steady bar (xterm).
" let &t_SI = "\e[6 q"
" let &t_EI = "\e[2 q"

set mouse=a                 " mouse support
set t_Co=256                " 256 color support


autocmd BufEnter * lcd %:p:h  " set vim dir to where vim was opened
autocmd VimEnter * if !argc() | Explore | endif " opens explorer if only vim was called

function! SynGroup()
    let l:s = synID(line('.'), col('.'), 1)
    echo synIDattr(l:s, 'name') . ' -> ' . synIDattr(synIDtrans(l:s), 'name')
endfun   (with much fewer keystrokes)



" SOURCING

" so ~/.vim/autoclose.vim         " bracket pairing
" so ~/.vim/plugin/setcolors.vim  " for switching the colorthemes



" KEYBINDS
nnoremap <CR> :noh<CR><CR>:<backspace>
nnoremap <Leader>s :so ~/.vim/vimrc<CR>
nnoremap <Leader>e :edit .<CR>
nnoremap <Leader>n :tabnew<CR>
nnoremap <Leader>v :vsplit<CR>
nnoremap <Leader>lb :set linebreak<CR>
nnoremap <Leader>lB :set nolinebreak<CR>

let g:netrw_banner=0        " disable annoying banner
let g:netrw_browse_split=0  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view
let g:netrw_list_hide=netrw_gitignore#Hide()
let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\+'
